name: Laravel testing with PostgreSQL
on:
    - push
jobs:
    build:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: test-php-lvl3
                ports:
                -   5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            -   uses: actions/checkout@v2
            -   run: |
                    source /etc/lsb-release
                    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1CE2AFD36DBCCA00
                    sudo echo "deb https://repos.loraserver.io/${DISTRIB_ID,,} ${DISTRIB_CODENAME} testing" | sudo tee /etc/apt/sources.list.d/loraserver.list
                    sudo apt-get update 
            -   name: Setup PHP with pgsql
                uses: shivammathur/setup-php@2.10.0
                with:
                    php-version: '7.4'
                    extensions: curl, pgsql, pdo_pgsql
                    tools: phpunit
            -   name: Composer (php-actions)
                uses: php-actions/composer@v5
            -   name: Connect to PostgreSQL
                # Runs a script that creates a PostgreSQL client, populates
                # the client with data, and retrieves data
                run: node client.js
                # Environment variable used by the `client.js` script to create
                # a new PostgreSQL client.
                env:
                    # The hostname used to communicate with the PostgreSQL service container
                    POSTGRES_HOST: localhost
                    # The default PostgreSQL port
                    POSTGRES_PORT: 5432
            -   name: Composer update
                run: |
                    composer self-update
            -   name: Install composer dependencies
                run: sudo composer install --no-scripts
            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ~/.composer/cache/files
                    key: dependencies-composer-${{ hashFiles('composer.json') }}
            -   name: Install front-end dependencies
                run: |
                  npm install
                  npm run dev
            -   name: Database set up migrations
                run: |
                    psql -c 'CREATE DATABASE IF NOT EXISTS test-php-lvl3;'
                    psql -c 'CREATE TABLE urls ( id bigint NOT NULL DEFAULT nextval('urls_id_seq'::regclass), name character varying(255) COLLATE pg_catalog."default" NOT NULL, created_at timestamp(0) without time zone, updated_at timestamp(0) without time zone, CONSTRAINT urls_pkey PRIMARY KEY (id), CONSTRAINT urls_name_unique UNIQUE (name) );'
                    psql -c 'CREATE TABLE url_checks ( id bigint NOT NULL DEFAULT nextval('url_checks_id_seq'::regclass), url_id bigint NOT NULL, status_code integer, h1 character varying(255) COLLATE pg_catalog."default", keywords character varying(255) COLLATE pg_catalog."default", description character varying(255) COLLATE pg_catalog."default", created_at timestamp(0) without time zone, updated_at timestamp(0) without time zone, CONSTRAINT url_checks_pkey PRIMARY KEY (id), CONSTRAINT url_checks_url_id_foreign FOREIGN KEY (url_id) REFERENCES urls (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION);'
            -   name: Run Testsuits
                run: $GITHUB_WORKSPACE/vendor/bin/phpunit tests/Feature --verbose