name: Laravel testing with PostgreSQL
on:
    - push
jobs:
    build:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12.6
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: test-php-lvl3
                ports:
                -   5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            -   uses: actions/checkout@v2
            -   uses: actions/setup-node@v2
                with:
                    node-version: '14'
            -   name: Install front-end dependencies
                run: |
                  npm install
                  npm run dev
            -   name: Setup PHP with pgsql
                uses: shivammathur/setup-php@2.10.0
                with:
                    php-version: '7.4'
                    extensions: curl, pgsql, pdo_pgsql
                    tools: phpunit
            -   name: Composer (php-actions)
                uses: php-actions/composer@v5
            -   name: Prepare Laravel Application
                run: |
                    cp -f .env.ci .env
                    cp -f .env .env.testing
            -   name: NPM ci
                run: npm ci
            -   name: Connect to PostgreSQL
                # Runs a script that creates a PostgreSQL client, populates
                # the client with data, and retrieves data
                run: php artisan migrate
                # Environment variable used by the `client.js` script to create
                # a new PostgreSQL client.
                env:
                    # The hostname used to communicate with the PostgreSQL service container
                    POSTGRES_HOST: localhost
                    # The default PostgreSQL port
                    POSTGRES_PORT: 5432
            -   name: Composer update
                run: |
                    composer self-update
            -   name: Install composer dependencies
                run: sudo composer install --no-scripts
            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ~/.composer/cache/files
                    key: dependencies-composer-${{ hashFiles('composer.json') }}
            -   name: Code Climate Coverage and running Testsuits
                env:
                    CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
                run: |
                     curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                     chmod +x ./cc-test-reporter
                     ./cc-test-reporter before-build
                     $GITHUB_WORKSPACE/vendor/bin/phpunit tests/Feature --coverage-clover clover.xml
                     ./cc-test-reporter after-build --coverage-input-type clover
            -   name: Run Testsuits without Code Coverage
                run: $GITHUB_WORKSPACE/vendor/bin/phpunit tests/Feature --verbose